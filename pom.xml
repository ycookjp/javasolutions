<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>ycookjp.myproject</groupId>
  <artifactId>javasolutions</artifactId>
  <name>javasolutions</name>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <description>Some java programs.</description>
  <modules>
    <module>javautils</module>
  </modules>
  <organization>
    <name>ycookjp my project</name>
  </organization>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <proxy.host></proxy.host>
    <proxy.port></proxy.port>
    <slf4j.ver>1.7.25</slf4j.ver>
    <logback.ver>1.2.3</logback.ver>
    <junit.version>4.13.1</junit.version>
    <maven-compiler.ver>3.10.1</maven-compiler.ver>
    <maven-jar.ver>3.3.0</maven-jar.ver>
    <maven-source.ver>3.2.1</maven-source.ver>
    <maven-surefire.ver> 3.0.0-M7</maven-surefire.ver>
    <jacoco-maven.ver>0.8.8</jacoco-maven.ver>
    <maven-site.ver>3.12.1</maven-site.ver>
    <maven-project-info-reports.ver>3.4.1</maven-project-info-reports.ver>
    <maven-javadoc.ver>3.4.1</maven-javadoc.ver>
    <maven-checkstyle.ver>3.2.0</maven-checkstyle.ver>
    <findbugs-maven.ver>3.0.5</findbugs-maven.ver>
    <maven-surefire-report.ver>3.0.0-M7</maven-surefire-report.ver>
    <maven-jxr.ver>3.3.0</maven-jxr.ver>
    <maven-assembly.var>3.4.2</maven-assembly.var>
    <maven-antrun.ver>3.1.0</maven-antrun.ver>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.ver}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.ver}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <!-- Compiles Java sources. -->
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler.ver}</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>
        <!-- Build a JAR from the current project. -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar.ver}</version>
          <configuration>
            <outputDirectory>${project.reporting.outputDirectory}</outputDirectory>
          </configuration>
        </plugin>
        <!-- Build a source-JAR from the current project. -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source.ver}</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <outputDirectory>${project.reporting.outputDirectory}</outputDirectory>
            <attach>false</attach>
          </configuration>
        </plugin>
        <!-- Run the JUnit unit tests in an isolated classloader. -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire.ver}</version>
          <configuration>
            <testFailureIgnore>true</testFailureIgnore>
            <forkMode>once</forkMode>
            <forkCount>1</forkCount>
            <argLine>${jacocoArgs} -Xmx1024m </argLine>
            <reuseForks>false</reuseForks>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven.ver}</version>
          <executions>
            <execution>
              <id>prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <propertyName>jacocoArgs</propertyName>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!-- Basic report creation.  -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site.ver}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${maven-project-info-reports.ver}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <!-- Build a source-JAR from the current project. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <!-- Run the JUnit unit tests in an isolated classloader. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <!-- Basic report creation.  -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <!-- project source assembly -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven-assembly.var}</version>
        <configuration>
          <filters>
            <filter>src/assembly/filter.properties</filter>
          </filters>
          <descriptors>
            <descriptor>src/assembly/sources.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>sources</id>
            <phase>site</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${maven-antrun.ver}</version>
        <executions>
          <execution>
            <!-- move zip file -->
            <id>move-zipfile</id>
            <phase>site</phase>
            <configuration>
              <target>
                <!-- move scripts archive to target/site directory -->
                <move file="target/${artifactId}-${version}-sources.zip" todir="target/site" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <!-- Generate Javadoc for the project. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc.ver}</version>
        <configuration>
          <links>
            <link>https://docs.oracle.com/javase/jp/8/docs/api</link>
          </links>
          <failOnError>false</failOnError>
          <additionalJOptions>
            <additionalJOption>-J-Dhttps.proxyHost=${proxy.host}</additionalJOption>
            <additionalJOption>-J-Dhttps.proxyPort=${proxy.port}</additionalJOption>
          </additionalJOptions>
        </configuration>
      </plugin>
      <!-- Generate a Checkstyle report. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle.ver}</version>
        <configuration>
          <configLocation>config/ModifiedSunChecks.xml</configLocation>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <!-- Generates a FindBugs report -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>${findbugs-maven.ver}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven-surefire-report.ver}</version>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven.ver}</version>
        <reportSets>
          <reportSet>
            <reports>
              <!-- select non-aggregate reports -->
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
<!-- 
 - OPTIONAL
 -->
      <!-- Generate a source cross reference. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${maven-jxr.ver}</version>
        <configuration>
          <inputEncoding>UTF-8</inputEncoding>
          <outputEncoding>UTF-8</outputEncoding>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
  <distributionManagement>
    <site>
      <id>javasolutions</id>
      <url>file://${java.io.tmpdir}/maven/site/javasolutions</url>
    </site>
  </distributionManagement>
</project>
